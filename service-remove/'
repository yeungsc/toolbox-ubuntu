#!/bin/bash
# Service remover script for services;

if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root" 
	exit 1
fi

function usage(){
	echo """usage: 
	srv-rm -n <name of service> 

	example:

	sudo ./service-gen -n ss-libev-41116 
	"""	
	exit 1
}

while getopts n:d:e:wh flag
do
	case "${flag}" in
		(n) name=${OPTARG};;
		(p) srvpath=${OPTARG};;
		# (d) description=${OPTARG};;
		# (e) execute=${OPTARG};;
		# (w) directory=${OPTARG};;
	(h) usage;;
	(*) usage
		exit;;

	esac
done


if [[ -z "$name" ]]; then # || -z "$directory" ]]; then
	echo "Missing Search Name"
else
	if [[ -z "$srvpath" ]]; then
		srvpath="/etc/systemd/system/"
	fi

	search=("$(ls $srvpath | grep -i $name)")

	if [[ -z "$search" ]]; then
		echo "No service with matching name to $name"
	else	
		echo "Found Objects"
		count=0
		for object in $search; do 
			((count++))
			echo "$count) $object"
		done
		echo "Enter which service you want to remove: "
		read input
		if [[ -n ${input//[0-9]/} || $input -gt $count  ]]; then
			echo "Bad input, exiting..."
			exit 1
		else
			echo "Selected service is ${search[$input]}"
		fi

		# while true; do
	 	# 	read -p "Are you sure you want to delete service $name?" yn
	 	# 	case $yn in
	 	# 		[Yy]* ) systemctl restart $name.service; break;;
	 	# 		[Nn]* ) break;;
	 	# 	esac
	 	# done
	fi

	# if [[ -z "$name" ]]; then 
	# 	name="newservice"
	# fi
	# Check if serv"ce name exist in folder
	# cp ./template.service ./$name.service
	# sed -i "s/desc/$description/" ./$name.service
	# sed -i "s|executable|${execute}|g" ./$name.service
	# if [[ -z "$directory" ]]; then 
	# 	sed -i "6d" ./$name.service 
	# else
	# 	sed -i "s/wrkdir/${directory}/" ./$name.service
	# fi

	#################################################################

	# if [ -f "$defaultpath/$name.service" ]; then 
	# 	# file already exit, ask if enabling?
	# 	while true; do
	# 		read -p "File already exist, Do you want to override?" yn
	# 		case $yn in
	# 			[Yy]* ) mv ./$name.service $defaultpath;systemctl daemon-reload;break;;
	# 			[Nn]* ) rm ./$name.service; break;;
	# 		esac
	# 	done
	# 	while true; do
	# 		read -p "Do you want to start the service?" yn
	# 		case $yn in
	# 			[Yy]* ) systemctl restart $name.service; break;;
	# 			[Nn]* ) break;;
	# 		esac
	# 	done
	# else
	# 	# file doesn't exist, try to create
	# 			mv ./$name.service $defaultpath/
	# 	systemctl daemon-reload
	# 	while true; do
	# 		read -p "Do you want to enable the service?" yn
	# 		case $yn in
	# 			[Yy]* ) systemctl enable $name.service; break;;
	# 			[Nn]* ) break;;
	# 		esac
	# 	done
	# 	while true; do
	# 		read -p "Do you want to start the service?" yn
	# 		case $yn in
	# 			[Yy]* ) systemctl start $name.service; break;;
	# 			[Nn]* ) break;;
	# 		esac
	# 	done

	# fi	
	# systemctl status $name.service 
fi

exit 0

